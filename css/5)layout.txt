CSS DISPLAY AND POSITIONING

    Flow of HTML
        브라우저는 css 가 없을 경우 html의 흐름대로 문서를 불러옴.
        속성들은 html 요소를 꾸미고, css 는 속성을 포함함. 브라우저는 이 속성들을 통해 요소들의 위치를 잡아줌.
        position, display, z-index, float, clear 등으로 브라우저에서 html 요소의 위치를 조정함.

    Position
        block-level 요소들은 서로 겹치지 않고 각자의 공간을 차지함.
        디폴트 값은 position 속성의 값으로 변할 수 있음.

            static: 디폴트 값
            relative
            absolute
            fixed
        
    Position: Relative
        

        .box-bottom {
            background-color: DeepSkyBlue;
            position: relative;
        }      
    
        이 코드는 브라우저에 div의 상대적인 위치를 예상하도록 하지만, div의 정확한 위치를 명시하지는 않음.

        .box-bottom {
            background-color: DeepSkyBlue;
            position: relative;
            top: 20px;
            left: 50px;
        }

        여기에서 div는 4개의 offset 속성들 중 2개로 위치를 잡음. 위 블록으로부터 20px, 왼쪽으로부터 50px 만큼 옮겨짐.

        offset 속성의 종류
            top - moves the element down.
            bottom - moves the element up.
            left - moves the element right.
            right - moves the element left.

        이때 pixels, ems, percentages 를 사용함. 그런데, position 의 value 가 static 이면 적용되지 않음.

    Position: Absolute
        absolute 를 사용하면 다른 요소들은 그 요소를 해당 페이지에 없는 것처럼 무시함. 이때 그 요소는 가장 가까운 위치에 있는 부모 요소를 기준으로 배치됨.
        이때 반드시 부모요소는 relative vhwltusdldjdi gka.

        .box-bottom {
            background-color: DeepSkyBlue;
            position: absolute;
            top: 20px;
            left: 50px;
        }

        원래 있던 블록에서 벗어나 위로 이동해 상 20px, 좌 50px의 여백을 가지고, 그 자리에 있던 요소와 겹쳐짐.

    Position: Fixed
        absolute 는 스크롤하면 해당 요소가 보이지 않았지만, fixed 는 스크롤 해도 그 위치를 고수함.

        이는 보통 '네비게이션 바'를 만들때 사용함.

    Z-Index
        웹 페이지의 박스들이 서로 다른 위치에서 결합할 때, 박스들은 겹쳐서 내용이 잘 안보일 수 있음.

        Z-index 속성은 요소가 겹칠 때 요소가 웹페이지의 뒤 또는 앞에서 나타나는 것을 제어함. 요소의 깊이와 관련. 더 깊은 요소가 더 낮은 요소 뒤에 나타남.

        .box-top {
            background-color: Aquamarine;
            position: relative;
            z-index: 2;
        }
        
        .box-bottom {
            background-color: DeepSkyBlue;
            position: absolute;
            top: 20px;
            left: 50px;
            z-index: 1;
        }

        z-index는 이런식으로 숫자로 된 값을 가지고, 숫자가 클수록 앞단에 나옴. static 에서는 작동하지 않음.

    Inline Display
        모든 html 요소들은 디폴트로 display 값을 가짐.

        Inline
            <em>, <strong>, <p> 태그의 display 디폴특 값은 inline.
            인라인 요소는 컨텐트에 바짝 붙어있는 박스를 가지고 내용을 표시하는 데 필요한 공간만 차지하며 각 요소 뒤에 새 줄을 만들지 않아도 됨.

            display의 inline 값은 디폴트가 inline 이 아닌 paragraphs, divs, headings 와 같은 요소도 inline 으로 만들 수 있음.

    Block Display
        block 요소들은 컨텐츠와 같은 라인에 위치하지 않음. 이 요소들을 black-level 요소라고 하는데 이들은 너비를 디폴트로 전체 페이지를 갖지만, width 를 지정할 수 있음.
        높이는 별도로 명시하지 않으면 컨텐츠를 수용하는 높이로 지정됨.

        strong {
            display: block;
        }

        위 경우, 모든 strong 요소는 자체 줄에 표시되고, 내용이 대부분의 화면 너비를 채우지 못할 수 있으나 양쪽에 내용이 표시되지 않음.

    Inline-Block Display
        inline-block 요소는 서로 바로 옆에 나타날 수 있고, 너비 및 높이 속성을 통해 치수를 정할 수 있음.

        <div class="rectangle">
            <p>I’m a rectangle!</p>
        </div>
        <div class="rectangle">
            <p>So am I!</p>
        </div>
        <div class="rectangle">
            <p>Me three!</p>
        </div>

        .rectangle {
        display: inline-block;
        width: 200px;
        height: 300px;
        }

        이 경우 .rectangle div 들은 너비 200px, 높이 300px 의 한 줄 안에 나타남.

    Float
        만약 페이지에서 요소를 가낭한 한 왼쪽 또는 오른쪽으로 이동하려는 경우 float 속성을 이용하면 됨.

        value 는 left, right 두 가지
            left - this value will move, or float, elements as far left as possible.
            right - this value will move elements as far right as possible.

        float 요소는 '너비'를 가져야 함. 그렇지 않으면, 요소를 포함하는 전체 너비를 가지며 float 값을 변경해도 가시적인 결과가 나타나지 않음.

    Clear
        float 는 여러 요소를 한번에 float 할 수 있지만, 요소들이 다른 높이를 갖고 있으면 요소들이 서로 충돌해 제대로 이동하지 못할 수 있음.

        clear 속성은 요소들이 충돌할 경우 각각 어떻게 이동해야 하는 정해줌.

        value 값으로
            left — the left side of the element will not touch any other element within the same containing element.
            right — the right side of the element will not touch any other element within the same containing element.
            both — neither side of the element will touch any other element within the same containing element.
            none — the element can touch either side.